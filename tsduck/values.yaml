# Default values for tsduck.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: rabbitlabs/tsduck
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# define environment for container
env:
  # these values will be created as a secret and passed a environnement variables to the TS Duck container, they can be used to retrieve content of S3 container
  secret:
    S3_ENDPOINT: ""
    S3_BUCKET: ""
    S3_ACCESS_KEY: ""
    S3_ACCESS_TOKEN: ""
    S3_SECRET_KEY: ""
  # these values will just be passed as normal environment variables
  normal: []

# scripts that will be run by system asynchronously at startup
autorun:
  transmit1.sh: |-
    #!/usr/bin/env bash
    tsp -I ip 5000 -O ip target:5000

persistance:
  enable: yes
  size: 2Gi
  storageClass: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 5000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
